// Carrinho com template pronto
(function(orionWidow) {
    console.log("ORION CART - ON");
    // Pegando o jQuery neste contexto
    var $ = jQuery, options;

	// Verificando se ele já foi declarado anteriormente
	if(typeof $.OrionCart === "function")
		return;

    // Configurações padrão do plugin
	var defaults = {
        thumb: {
            default: /55-55/g, 
            formated: "70-70" 
        },
        buyButton: {
            product: {
                element: ".cbo-btn-addcart-pgproduct",
                skuVariationOn: false,
                sellers: false,
                redirect: false,
                quantity: {
                    apply: false,
                    element: ".o-qtt-button"
                },
                select: {}
            },
            shelf: {
                element: ".orion-button",
                elementAttr: "product-id",
                quantity: {
                    apply: false
                }
            }
        },
        buttons: {
            menu: {
                btnOpen: null, 
                infoQtt: null 
            },
            close: {
                apply: true,
            },
            continue: {
                apply: true,
                text: 'Continueee'
            },
            closeOverlay: {
                apply: false
            },
            finish: {
                text: 'Finalizar!'
            }
        },
        emptyCart: {
            text: 'Seu carrinho está vazio'
        },
        fixHeight: {
            apply: true,
            height: 225
        },
        icons: {
            minus: '<svg xmlns="http://www.w3.org/2000/svg" width="10" height="3" viewBox="0 0 16 3"><rect id="Retângulo_4101" data-name="Retângulo 4101" width="16" height="3" fill="#918785"/></svg>',
            more: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="10" height="10" viewBox="0 0 16 16"><defs><clipPath id="clip-ico_carrinho__"><rect width="16" height="16"/></clipPath></defs><g id="ico_carrinho__" data-name="ico_carrinho_+" clip-path="url(#clip-ico_carrinho__)"><rect width="16" height="16" fill="rgba(243,243,243,0)"/><g id="Grupo_5306" data-name="Grupo 5306" transform="translate(14312 12792)"><g id="Grupo_5105" data-name="Grupo 5105" transform="translate(-14304.875 -12792)"><rect id="Retângulo_4052" data-name="Retângulo 4052" width="16" height="3" transform="translate(2.875 0) rotate(90)" fill="#918785"/></g><rect id="Retângulo_4054" data-name="Retângulo 4054" width="16" height="3" transform="translate(-14296 -12782) rotate(180)" fill="#918785"/></g></g></svg>',
            remove: '<svg xmlns="http://www.w3.org/2000/svg" style="width: 15px;height: 18px;" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 50 50" width="50px" height="50px"><g id="surface72134728"><path style=" stroke:none;fill-rule:nonzero;fill:rgb(28.235295%,34.509805%,51.764709%);fill-opacity:1;" d="M 21 0 C 19.355469 0 18 1.355469 18 3 L 18 5 L 10.1875 5 C 10.0625 4.976562 9.9375 4.976562 9.8125 5 L 8 5 C 7.96875 5 7.9375 5 7.90625 5 C 7.355469 5.027344 6.925781 5.496094 6.953125 6.046875 C 6.980469 6.597656 7.449219 7.027344 8 7 L 9.09375 7 L 12.6875 47.5 C 12.8125 48.898438 14.003906 50 15.40625 50 L 34.59375 50 C 35.996094 50 37.1875 48.898438 37.3125 47.5 L 40.90625 7 L 42 7 C 42.359375 7.003906 42.695312 6.816406 42.878906 6.503906 C 43.058594 6.191406 43.058594 5.808594 42.878906 5.496094 C 42.695312 5.183594 42.359375 4.996094 42 5 L 32 5 L 32 3 C 32 1.355469 30.644531 0 29 0 Z M 21 2 L 29 2 C 29.5625 2 30 2.4375 30 3 L 30 5 L 20 5 L 20 3 C 20 2.4375 20.4375 2 21 2 Z M 11.09375 7 L 38.90625 7 L 35.3125 47.34375 C 35.28125 47.691406 34.910156 48 34.59375 48 L 15.40625 48 C 15.089844 48 14.71875 47.691406 14.6875 47.34375 Z M 18.90625 9.96875 C 18.863281 9.976562 18.820312 9.988281 18.78125 10 C 18.316406 10.105469 17.988281 10.523438 18 11 L 18 44 C 17.996094 44.359375 18.183594 44.695312 18.496094 44.878906 C 18.808594 45.058594 19.191406 45.058594 19.503906 44.878906 C 19.816406 44.695312 20.003906 44.359375 20 44 L 20 11 C 20.011719 10.710938 19.894531 10.433594 19.6875 10.238281 C 19.476562 10.039062 19.191406 9.941406 18.90625 9.96875 Z M 24.90625 9.96875 C 24.863281 9.976562 24.820312 9.988281 24.78125 10 C 24.316406 10.105469 23.988281 10.523438 24 11 L 24 44 C 23.996094 44.359375 24.183594 44.695312 24.496094 44.878906 C 24.808594 45.058594 25.191406 45.058594 25.503906 44.878906 C 25.816406 44.695312 26.003906 44.359375 26 44 L 26 11 C 26.011719 10.710938 25.894531 10.433594 25.6875 10.238281 C 25.476562 10.039062 25.191406 9.941406 24.90625 9.96875 Z M 30.90625 9.96875 C 30.863281 9.976562 30.820312 9.988281 30.78125 10 C 30.316406 10.105469 29.988281 10.523438 30 11 L 30 44 C 29.996094 44.359375 30.183594 44.695312 30.496094 44.878906 C 30.808594 45.058594 31.191406 45.058594 31.503906 44.878906 C 31.816406 44.695312 32.003906 44.359375 32 44 L 32 11 C 32.011719 10.710938 31.894531 10.433594 31.6875 10.238281 C 31.476562 10.039062 31.191406 9.941406 30.90625 9.96875 Z M 30.90625 9.96875 "/></g></svg>',
            loader: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: transparent; shape-rendering: auto;" width="40px" height="30px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid"><g transform="rotate(0 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(30 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(60 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(90 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(120 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(150 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(180 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(210 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(240 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(270 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"<animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(300 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate></rect></g><g transform="rotate(330 50 50)"><rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#33547F"><animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate></rect></g></svg>',
            cart: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="80" height="80" x="0" y="0" viewBox="0 0 446.853 446.853" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><g xmlns="http://www.w3.org/2000/svg"><path d="M444.274,93.36c-2.558-3.666-6.674-5.932-11.145-6.123L155.942,75.289c-7.953-0.348-14.599,5.792-14.939,13.708 c-0.338,7.913,5.792,14.599,13.707,14.939l258.421,11.14L362.32,273.61H136.205L95.354,51.179 c-0.898-4.875-4.245-8.942-8.861-10.753L19.586,14.141c-7.374-2.887-15.695,0.735-18.591,8.1c-2.891,7.369,0.73,15.695,8.1,18.591 l59.491,23.371l41.572,226.335c1.253,6.804,7.183,11.746,14.104,11.746h6.896l-15.747,43.74c-1.318,3.664-0.775,7.733,1.468,10.916 c2.24,3.184,5.883,5.078,9.772,5.078h11.045c-6.844,7.617-11.045,17.646-11.045,28.675c0,23.718,19.299,43.012,43.012,43.012 s43.012-19.294,43.012-43.012c0-11.028-4.201-21.058-11.044-28.675h93.777c-6.847,7.617-11.047,17.646-11.047,28.675 c0,23.718,19.294,43.012,43.012,43.012c23.719,0,43.012-19.294,43.012-43.012c0-11.028-4.2-21.058-11.042-28.675h13.432 c6.6,0,11.948-5.349,11.948-11.947c0-6.6-5.349-11.948-11.948-11.948H143.651l12.902-35.843h216.221 c6.235,0,11.752-4.028,13.651-9.96l59.739-186.387C447.536,101.679,446.832,97.028,444.274,93.36z M169.664,409.814 c-10.543,0-19.117-8.573-19.117-19.116s8.574-19.117,19.117-19.117s19.116,8.574,19.116,19.117S180.207,409.814,169.664,409.814z M327.373,409.814c-10.543,0-19.116-8.573-19.116-19.116s8.573-19.117,19.116-19.117s19.116,8.574,19.116,19.117 S337.916,409.814,327.373,409.814z" fill="#33547F" data-original="#000000" style="" class=""/></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g><g xmlns="http://www.w3.org/2000/svg"></g></g></svg>'
        }
    }

    // Núcleo do plugin
    $.OrionCart = function (opts) {
        let cart, thisPlugin = {};
		options = $.extend(true, {}, defaults, opts);

        let pubThumbsConfigs = options.thumb;
        let pubBuyButtonProduct = options.buyButton.product;
        let pubBuyButtonShelf = options.buyButton.shelf;
        let pubButtons = options.buttons;
        let pubEmptyCart = options.emptyCart;
        let pubFixHeight = options.fixHeight;
        let pubIcons = {
            minus: options.icons.minus,
            more: options.icons.more,
            remove: options.icons.remove,
            loader: options.icons.loader,
            cart: options.icons.cart
        }

        // Verificando se o orderForm ja foi declarado
        if (vtexjs && vtexjs.checkout && vtexjs.checkout.orderForm) {
            renderItems(vtexjs.checkout.orderForm.items);
            updateQuantityItemsAndRemove();
            updateQuantityLayout();
            if ($(document.body).is(".product") || $(document.body).is(".produto")) {
                buyButtonConfig();
            }
            totalizersConfig(vtexjs.checkout.orderForm.items, vtexjs.checkout.orderForm.totalizers, vtexjs.checkout.orderForm.value);
            fixHeightConfig();
            productButtonsCartConfig(vtexjs.checkout.orderForm.items);
            shelfButtonAddCart();
            shelfButtonsQuantity();
            renderEmptyCart(vtexjs.checkout.orderForm.items);
        } 
        // Buscando o orderForm manualmente
        else {
            vtexjs.checkout.getOrderForm().done(function(orderForm) {
                renderItems(orderForm.items);
                updateQuantityItemsAndRemove();
                updateQuantityLayout();
                if ($(document.body).is(".product") || $(document.body).is(".produto")) {
                    buyButtonConfig();
                }
                totalizersConfig(orderForm.items, orderForm.totalizers, orderForm.value);
                fixHeightConfig();
                productButtonsCartConfig(orderForm.items);
                shelfButtonAddCart();
                shelfButtonsQuantity();
                renderEmptyCart(orderForm.items);

                localStorage.setItem("OW_orderForm", JSON.stringify(orderForm));
            });
        }

        // Renderização dos items no carrinho
        function renderItems (items) {
            let listItens = '';

            let pbmItems = null;
            if (localStorage.getItem("dagCurrentCart")) {
                pbmItems = JSON.parse(localStorage.getItem("dagCurrentCart"));
            }

            // Setando as infos do produto
            items.forEach(function (item, index, array) {
                let priceFormatted = null;
                let blockPbm = '';
                let pbmOn = null;
                let block = null;
                if (item.manualPrice) {
                    console.log("Carrinho - Produto com PBM!");
                    pbmOn = true;
                    priceFormatted = orionFormatPrice(item.manualPrice / 100, 2, ",", ".");
                    blockPbm = '<span class="cart-pbm-info">Desconto aplicado</span>'
                    let imgFormated = thumbConfig(item); 
                    block = `
                        <div class="cart-item">
                            <div class="cart-item-image">
                                <img src="${imgFormated}" />
                            </div>
                            <div class="cart-item-info">
                                <div class="cart-item-info--name">
                                    <span class="name">${item.name}</span>
                                    <span class="price-wrapper">
                                        <span class="price-formatted">R$ ${priceFormatted}</span>
                                        <span class="price-formatted-pbm">${blockPbm}</span> 
                                    </span>
                                </div>
                                <div class="cart-item-info--price--buttons">
                                    <span class="cart-item-text-qtt">Quantidade</span>
                                    <ul class="list-buttons-cart-item list-pbm" data-of-index="${index}">
                                        <li class="item-total">
                                            <a class="cart-btn-total" data-prod-qtt="${item.quantity}">${item.quantity}</a>
                                            ${pubIcons.loader}
                                        </li>
                                        <li class="item-remove ${pbmOn == true ? 'item-remove-pbm' : ''}">
                                            <a class="cart-btn-remove">${pubIcons.remove}</a>
                                            ${pubIcons.loader}
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    `;
                } else {
                    pbmOn = false;
                    priceFormatted = orionFormatPrice(item.price / 100, 2, ",", ".");
                    let imgFormated = thumbConfig(item); 
                    block = `
                        <div class="cart-item">
                            <div class="cart-item-image">
                                <img src="${imgFormated}" />
                            </div>
                            <div class="cart-item-info">
                                <div class="cart-item-info--name">
                                    <span class="name">${item.name}</span>
                                    <span class="price-wrapper">
                                        <span class="price-formatted">R$ ${priceFormatted}</span>
                                        <span class="price-formatted-pbm">${blockPbm}</span> 
                                    </span>
                                </div>
                                <div class="cart-item-info--price--buttons">
                                    <span class="cart-item-text-qtt">Quantidade</span>
                                    <ul class="list-buttons-cart-item" data-of-index="${index}">
                                        <li>
                                            <a class="cart-btns-update cart-btn-minus">${pubIcons.minus}</a>
                                        </li>
                                        <li class="item-total">
                                            <a class="cart-btn-total" data-prod-qtt="${item.quantity}">${item.quantity}</a>
                                            ${pubIcons.loader}
                                        </li>
                                        <li>
                                            <a class="cart-btns-update cart-btn-more">${pubIcons.more}</a>
                                        </li>
                                        <li class="item-remove ${pbmOn == true ? 'item-remove-pbm' : ''}">
                                            <a class="cart-btn-remove">${pubIcons.remove}</a>
                                            ${pubIcons.loader}
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    `;
                }

                // Agrupando
                listItens = listItens + block;
            });

            // Renderizando
            $(".orion-cart__products--list").html(listItens);
        }

        // Quantidade items carrinho (botões)
        function updateQuantityItemsAndRemove () {
            let listBtns = {
                minus: ".cart-btn-minus",
                more: ".cart-btn-more",
                remove: ".cart-btn-remove",
                all: ".cart-btns-update"
            }
            // Diminui a quantidade de item ao carrinho
            $(document).on("click", listBtns.all, function () {
                let $t = $(this);
                let wrapper = $t.parent().parent();
                let thisItemIndex = wrapper.attr("data-of-index"); // Index do item no OF
                let thisItemQtt = wrapper.find("a[data-prod-qtt]"); // Qtt do item no OF
                thisItemQtt = thisItemQtt.attr("data-prod-qtt");
                let beforeQtt = thisItemQtt; // Guardando a antiga Qtt

                wrapper.find("a").addClass("cart-btn-loading");
                wrapper.find(".item-total").addClass("item-total-loading");

                if ($t.is(".cart-btn-minus")) {
                    if (wrapper.find("a").text() == 1) {
                        wrapper.find("a").removeClass("cart-btn-loading");
                        wrapper.find(".item-total").removeClass("item-total-loading");
                        return;
                    }
                    
                    thisItemQtt = parseInt(thisItemQtt) - 1;
                } else if ($t.is(".cart-btn-more")) {
                    thisItemQtt = parseInt(thisItemQtt) + 1;
                }

                let updateItem = {
                    index: thisItemIndex,
                    quantity: thisItemQtt // Quantidade atualizada
                };
                newQuantity = updateItem.quantity;
                vtexjs.checkout.updateItems([updateItem], null, false).done(function (newOrderForm) {
                    if (beforeQtt == newOrderForm.items[thisItemIndex].quantity) {
                        let thisNameToAlert = newOrderForm.items[thisItemIndex].name;
                        alert('A quantidade desejada para o item '+thisNameToAlert+' não está disponível');
                        wrapper.find('a').removeClass("cart-btn-loading");
                        wrapper.find(".item-total").removeClass("item-total-loading");
                    } else {
                        wrapper.find(".cart-btn-total").text(newQuantity);
                        wrapper.find('a').removeClass("cart-btn-loading");
                        wrapper.find(".item-total").removeClass("item-total-loading");
                    }
                });

            });

            // Remove item do carrinho
            $(document).on("click", listBtns.remove , function () {
                let $t = $(this);
                let wrapper = $t.parent().parent();
                let thisItemIndex = $t.closest(".list-buttons-cart-item").attr("data-of-index");
                wrapper.find(".item-remove").addClass("item-remove-loading");
                //let qtt = wrapper.find(".cart-btn-total").text();

                if ($t.parent().is(".item-remove-pbm")) {
                    let itemsToRemove = [];
                    let dataCart = JSON.parse(localStorage.getItem("dagCurrentCart"));
                    vtexjs.checkout.orderForm.items.forEach(item => {
                        dataCart.consultList.forEach((subItem, index) => {
                            if (item.productId == subItem.id) {
                                itemsToRemove.push({
                                    index: index,
                                    quantity: 0
                                });
                            }
                        });
                    });

                    vtexjs.checkout.removeItems(itemsToRemove).done(function() {
                        $t.closest(".cart-item").remove();

                        // Limpando o produto do carrinho do PBM e da navegação
                        localStorage.removeItem("dagCurrentCart");
                        localStorage.removeItem("dagCurrentCart_expiration");

                        localStorage.removeItem("dagCurrentProductPBM");
                        localStorage.removeItem("dagCurrentProductPBM_expiration");

                        window.location.reload();
                    });
                } else {
                    let itemsToRemove = [
                        {
                            index: thisItemIndex,
                            quantity: 0,
                        }
                    ]
                    vtexjs.checkout.removeItems(itemsToRemove).done(function() {
                        $t.closest(".cart-item").remove();
                    });
                }
            });
        }

        // Atualiza o front do carrinho de acordo com a atualização no orderForm
        function updateQuantityLayout () {
            $(window).on("orderFormUpdated.vtex", function(evt, orderForm) {
                renderItems(orderForm.items);
                totalizersConfig(orderForm.items, orderForm.totalizers, orderForm.value);
                fixHeightConfig();
                renderEmptyCart(orderForm.items);

                localStorage.setItem("OW_orderForm", JSON.stringify(orderForm));
                $(window).trigger("OW.cartUpdated");
            });
        }

        // Configuração das thumbs
        function thumbConfig (item) {
            let thisImage = item.imageUrl.replace(pubThumbsConfigs.default, pubThumbsConfigs.formated);
            return thisImage;
        }

        // PG. Produto
        function buyButtonConfig () {
            let buyButtonElement = $(document.body).find(pubBuyButtonProduct.element);
            buyButtonElement.on("click", function (e) {
                if (pubBuyButtonProduct.redirect == false) {
                    e.preventDefault();
                    if (pubBuyButtonProduct.sellers == true) {
                        addProductCartBySeller();  
                        return false;
                    } 
                    else if (pubBuyButtonProduct.sellers == false) {
                        addProductCart();
                        return false;
                    }
                } 
                else if (pubBuyButtonProduct.redirect == true) {
                    redirectProductToCheckoutCart();
                }
            });

            if (pubBuyButtonProduct.quantity.apply == true) {
                let wrapperQtt = $('.ow-prod-wrapper-qtt');
                let btnMinus = wrapperQtt.find('.ow-prod-qtt-btn.minus');
                let btnMore = wrapperQtt.find('.ow-prod-qtt-btn.plus');
                let inputQtt = wrapperQtt.find('.ow-prod-qtt-btn.total');

                btnMinus.on('click', () => {
                    let countMinus = inputQtt.val();
                    if (countMinus == 1) {
                        return;
                    }
                    countMinus--;
                    inputQtt.val(countMinus);
                    // dataBuy.quantity = qtt;
                });

                btnMore.on('click', () => {
                    let countMore = inputQtt.val();
                    countMore++;
                    inputQtt.val(countMore);
                    // dataBuy.quantity = countMore;
                });
            }
        }

        // PG. Produto - Adicionando normalmente sem sellers
        function addProductCart () {
            let updateQtt = $(".ow-prod-qtt-btn.total").val() || 1;
            // if (pubBuyButtonProduct.quantity.apply == true) {
            //     if ($(document.body).find(pubBuyButtonProduct.quantity.element).length == 0) {
            //         dataBuy.quantity = 1;
            //         console.warn("[OrionCart] - Input de quantidade não encontrado, assumindo quantidade de 1.");
            //     } else {
            //         var btnQttProduct = $(document.body).find(pubBuyButtonProduct.quantity.element);
            //         dataBuy.quantity = btnQttProduct.val();
            //     }
            // } else {
            //     dataBuy.quantity = 1;
            // }

            if (pubBuyButtonProduct.skuVariationOn == true) {
                
                // if (skuJson.skus.length == 1) {
                //     console.log("111 SKU")
                // } else 
                if (skuJson.skus.length > 1) {
                    if (!$("input.sku-picked").length) {
                        alert("Por favor selecione um modelo desejado.");
                        return;
                    }
                }

                var item = {};
                skuJson.skus.forEach(function (skuLine) {
                    if (skuLine.values[0] == $("input.sku-picked").val()) {
                        item = {
                            id: skuLine.sku,
                            quantity: updateQtt,
                            seller: skuLine.sellerId
                        };
                    }
                });
    
                vtexjs.checkout.addToCart([item], null, 1)
                .done(function(orderForm) {
                    $(document.body).addClass("orion-cart-on");
                });
            } else {
                var item = {
                    id: skuJson.skus[0].sku,
                    quantity: 1,
                    seller: skuJson.skus[0].sellerId
                };

                vtexjs.checkout.addToCart([item], null, 1)
                .done(function(orderForm) {
                    $(document.body).addClass("orion-cart-on");
                });
            }

        }

        function redirectProductToCheckoutCart () {}

        function addProductCartBySeller () {}

        // Configuração botões (Fechar, Comprar, Continuar Comprando)
        function productButtonsCartConfig () {
            let btnClose = $("#orion-cart-close");
            let btnContinue = $("#orion-cart-continuebuy");
            let btnFinish = $("#orion-cart-finish");
            let btnMiniCart = $(pubButtons.menu.btnOpen);

            if (pubButtons.close.apply == false) {
                btnClose.hide();
            }

            if (pubButtons.continue.apply == false) {
                btnContinue.hide();
            }

            if (btnMiniCart.length) {
                btnMiniCart.on("click", function () {
                    $(document.body).addClass("orion-cart-on");
                });
            }

            if (pubButtons.closeOverlay.apply == true) {
                $(".orion-cart-overlay").on("click", function () {
                    $(document.body).removeClass("orion-cart-on");
                });
            }

            btnContinue.text(pubButtons.continue.text);
            btnFinish.text(pubButtons.finish.text);

            btnClose.on("click", function () {
                $(document.body).removeClass("orion-cart-on");
                $(document).trigger("OrionCart.buttonsClicked");
            });
            btnContinue.on("click", function () {
                $(document.body).removeClass("orion-cart-on");
                $(document).trigger("OrionCart.buttonsClicked");
            });
        }

        // Configuração botões comprar na prateleira
        function shelfButtonAddCart () {
            let btnElement = $(document.body).find(pubBuyButtonShelf.element);
            if (btnElement.length == 0) {
                return;
            }
            btnElement.on("click", function () {
                let $t = $(this);
                let thisButton = $t.closest("li[layout]").find(".asynchronousBuyButton");
                let thisUrl = thisButton.attr("href");
                let thisSku = thisUrl.match(/(?<=sku=)(\d+)(?=&qty)/g)[0];
                let thisSeller = thisUrl.match(/(?<=seller=)(\d+|\D+)(?=&sc)/g)[0];
                let item;
                
                if (pubBuyButtonShelf.quantity.apply == true) {
                    let elementValue = $(this).closest(".orion-cart-shelf").find(".orion-cart-shelf-qtt-value").text();
                    item = {
                        id: thisSku,
                        quantity: parseInt(elementValue),
                        seller: thisSeller
                    }
                } else {
                    item = {
                        id: thisSku,
                        quantity: 1,
                        seller: thisSeller
                    }
                }

                vtexjs.checkout.addToCart([item], null, 1)
                    .done(function(orderForm) {
                        $(document.body).addClass("orion-cart-on");
                    })
                    .fail(function(e) {
                        console.log("Não foi possivel adicionar o item no carrinho. ", e);
                    });
            })
        } 

        function shelfButtonsQuantity () {
            $(".orion-cart-shelf-qtt").find(".minus").on("click", function () {
                let elementValue = $(this).siblings(".orion-cart-shelf-qtt-value");
                if (elementValue.text() == 1) {
                    return;
                }

                let oldValue = elementValue.text();
                let newValue = parseInt(oldValue) - parseInt(1);
                elementValue.text(newValue);
            });

            $(".orion-cart-shelf-qtt").find(".more").on("click", function () {
                let elementValue = $(this).siblings(".orion-cart-shelf-qtt-value");
                let oldValue = elementValue.text();
                let newValue = parseInt(oldValue) + parseInt(1);
                elementValue.text(newValue);
            });
        }

        // Carrinho vazio (image)
        function renderEmptyCart (items) {
            let textCart = pubEmptyCart.text;
            if (items.length == 0) {
                let wrapper = $(".orion-cart__products--list");
                let emptyBlock = $('<div class="list-products-empty">'+pubIcons.cart+'<span>'+textCart+'</span></div>');
                wrapper.addClass("list-empty");
                wrapper.html(emptyBlock);
            } else {
                $(".orion-cart__products--list").removeClass("list-empty");
                $(".list-products-empty").remove();
            }
        }

        // Soma dos Itens e Preços
        function totalizersConfig (items, totalizers, totalValue) { 
            let menuTotalButton = $(document.body).find(pubButtons.menu.infoQtt);

            if (items.length == 0) {
                menuTotalButton.text("0");
                $(".totalizers-items-number").text("0");
                $(".totalizers-totals-number").text("0,00");
                return;
            }

            let totalItems = 0;
            let priceItems = 0;

            items.forEach(function(thisItem) {
                totalItems = totalItems + thisItem.quantity;
            });

            if (!totalizers.length) {
                priceItems = '0';
            } else {
                priceItems = orionFormatPrice(totalizers[0].value / 100, 2, ",", ".");
                totalValue = (totalValue / 100).toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});
            }
            
            menuTotalButton.text(totalItems);
            $(".totalizers-items-number").text(totalItems);
            $(".totalizers-totals-number").text("R$ " + totalValue);
        }

        // Correção da altura do carrinho
        function fixHeightConfig () {
            if (pubFixHeight.apply == true) {
                let total = 0;
                if ($(".orion-cart__title").is(":visible")) {
                    total = total + $(".orion-cart__title").innerHeight();
                }
                if ($(".orion-cart__totalizers").is(":visible")) {
                    total = total + $(".orion-cart__totalizers").innerHeight();
                }
                if ($(".orion-cart__shipping").is(":visible")) {
                    total = total + $(".orion-cart__shipping").innerHeight();
                }
                if ($(".orion-cart__freeshipping").is(":visible")) {
                    total = total + $(".orion-cart__freeshipping").innerHeight();
                }
                if ($(".orion-cart__bottom").is(":visible")) {
                    total = total + $(".orion-cart__bottom").innerHeight();
                }

                let result = $(window).height() - total;
                $(".orion-cart__products--list").innerHeight(result);

            } else {
                $(".orion-cart__products--list").addClass("height-auto");
            } 
        }

        // (Utils) Formatação de preço
        function orionFormatPrice(n,t,e,i){n=(n+"").replace(/[^0-9+\-Ee.]/g,""),n=isFinite(+n)?+n:0,i=void 0===i?",":i,e=void 0===e?".":e;var r="";r=function(n,t){var e=Math.pow(10,t);return""+(Math.round(n*e)/e).toFixed(t)};return 3<(r=((t=isFinite(+t)?Math.abs(t):0)?r(n,t):""+Math.round(n)).split("."))[0].length&&(r[0]=r[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,i)),(r[1]||"").length<t&&(r[1]=r[1]||"",r[1]+=Array(t-r[1].length+1).join("0")),r.join(e)}

        // Termina o plugin
		thisPlugin.cart = cart;
		return thisPlugin;
    }

})(this);